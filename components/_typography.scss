$typography: () !default;
$typography-default-settings: (
  heading-tags: (
    h1, h2, h3, h4, h5, h6, blockquote
  ),

  condensed-tags: ()
);

$typography: map-merge-settings($typography-default-settings, $typography);

$include-html-paint-typography: true !default;

@function typography-settings($setting, $property: null) {
  @if $property {
    @return map-get(map-get($typography, $setting), $property);
  } @else {
    @return map-get($typography, $setting);
  }
}

@mixin typography-font-smoothing(
  $heading-tags: typography-settings(heading-tags)
) {
  body {
    -webkit-font-smoothing: $body-font-smoothing;
  }

  @for $i from 1 through length($heading-tags) {
    $tag: nth($heading-tags, $i);

    #{$tag} {
      -webkit-font-smoothing: $heading-font-smoothing;
    }
  }
}

@mixin typography-condensed-tags {
  @each $tag, $letter-spacing in typography-settings(condensed-tags) {
    #{$tag} {
      letter-spacing: $letter-spacing;
    }
  }
}

@include exports('paint-typography') {
  @if $include-html-paint-typography {
    @include typography-font-smoothing;
    @include typography-condensed-tags;
  }
}
